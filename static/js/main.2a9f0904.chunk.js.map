{"version":3,"sources":["containers/Event/Event.module.css","containers/Login/Login.module.css","components/LoginForm/LoginForm.module.css","components/Navigation/Navigation.module.css","store/reducers/authReducer/types.ts","store/reducers/authReducer/index.ts","store/reducers/eventReducer/types.ts","store/reducers/eventReducer/index.ts","router/index.tsx","store/index.ts","hooks/useTypedSelector.ts","utils/rules.ts","api/userService.ts","store/reducers/authReducer/asyncActionCreators.ts","components/LoginForm/LoginForm.tsx","containers/Login/Login.tsx","utils/date.ts","components/EventCalendar/EventCalendar.tsx","components/EventForm/EventForm.tsx","containers/Event/Event.tsx","store/reducers/eventReducer/asyncActionCreators.ts","components/AppRouter/AppRouter.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["module","exports","AuthActionName","EventActionEnum","initialState","isAuth","user","isLoading","error","setAuthAction","payload","type","SET_AUTH","setUserAction","SET_USER","setIsLoadingAction","SET_IS_LOADING","setErrorAction","SET_ERROR","RouteNames","guests","events","setEventAction","SET_EVENT","rootReducer","combineReducers","auth","state","action","event","SET_GUESTS","store","createStore","applyMiddleware","thunk","useTypedSelector","useSelector","rules","message","required","validator","_","value","isSameOrAfter","moment","Promise","resolve","reject","Error","UserService","axios","get","asyncActionCreators","username","password","dispatch","a","getUsers","res","data","find","localStorage","setItem","removeItem","LoginForm","useState","setUsername","setPassword","useDispatch","labelCol","span","wrapperCol","onFinish","className","styles","Item","label","name","onChange","e","target","Password","offset","htmlType","loading","Login","justify","align","row","formatDate","date","year","getFullYear","month","getMonth","day","getDay","EventCalendar","dateCellRender","formateDate","toDate","currentDateEvents","filter","ev","map","i","descr","EventForm","submit","author","guest","setEvent","selectDate","style","width","Option","Event","modalVisible","setModalVisible","useEffect","console","log","getItem","json","JSON","parse","currentUserEvent","modal","btn","onClick","title","visible","footer","onCancel","push","stringify","createEvent","publicRouter","path","LOGIN","element","ALL","privateRouter","EVENT","AppRouter","route","Navigation","router","useNavigate","Header","gutter","theme","mode","selectable","App","Content","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a9f0904.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Event_modal__3d345\",\"btn\":\"Event_btn__2NRqj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Login_row__3CkaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"LoginForm_error__34K5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Navigation_name__3bnXN\"};","import { IUser } from '../../../models/IUser';\r\n\r\nexport interface AuthStateType {\r\n    isAuth: boolean;\r\n    user: IUser;\r\n    isLoading: boolean;\r\n    error: string;\r\n}\r\n\r\nexport enum AuthActionName {\r\n    SET_AUTH = 'SET_AUTH',\r\n    SET_USER = 'SET_USER',\r\n    SET_IS_LOADING = 'SET_IS_LOADING',\r\n    SET_ERROR = 'SET_ERROR',\r\n}\r\n\r\ninterface SetAuthAction {\r\n    type: AuthActionName.SET_AUTH;\r\n    payload: boolean;\r\n}\r\ninterface SetUserAction {\r\n    type: AuthActionName.SET_USER;\r\n    payload: IUser;\r\n}\r\ninterface SetIsLoadingAction {\r\n    type: AuthActionName.SET_IS_LOADING;\r\n    payload: boolean;\r\n}\r\ninterface SetErrorAction {\r\n    type: AuthActionName.SET_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport type AuthActionType =\r\n    | SetAuthAction\r\n    | SetUserAction\r\n    | SetIsLoadingAction\r\n    | SetErrorAction;\r\n","import { IUser } from '../../../models/IUser';\r\nimport { AuthActionName, AuthActionType, AuthStateType } from './types';\r\n\r\nconst initialState: AuthStateType = {\r\n    isAuth: false,\r\n    user: {} as IUser,\r\n    isLoading: false,\r\n    error: '',\r\n};\r\n\r\nexport const authReducer = (\r\n    state = initialState,\r\n    action: AuthActionType\r\n): AuthStateType => {\r\n    switch (action.type) {\r\n        case AuthActionName.SET_AUTH:\r\n            return { ...state, isAuth: action.payload, isLoading: false };\r\n        case AuthActionName.SET_USER:\r\n            return { ...state, user: action.payload };\r\n        case AuthActionName.SET_IS_LOADING:\r\n            return { ...state, isLoading: action.payload };\r\n        case AuthActionName.SET_ERROR:\r\n            return { ...state, error: action.payload, isLoading: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthAction = (payload: boolean): AuthActionType => ({\r\n    type: AuthActionName.SET_AUTH,\r\n    payload,\r\n});\r\nexport const setUserAction = (payload: IUser): AuthActionType => ({\r\n    type: AuthActionName.SET_USER,\r\n    payload,\r\n});\r\nexport const setIsLoadingAction = (payload: boolean): AuthActionType => ({\r\n    type: AuthActionName.SET_IS_LOADING,\r\n    payload,\r\n});\r\nexport const setErrorAction = (payload: string): AuthActionType => ({\r\n    type: AuthActionName.SET_ERROR,\r\n    payload,\r\n});\r\n","import { IUser } from '../../../models/IUser';\r\nimport { IEvent } from '../../../models/IEvent';\r\n\r\nexport interface EventStateType {\r\n    guests: IUser[];\r\n    events: IEvent[];\r\n}\r\n\r\nexport enum EventActionEnum {\r\n    SET_GUESTS = 'SET_GUESTS',\r\n    SET_EVENT = 'SET_EVENT',\r\n}\r\n\r\nexport interface SetGuestsAction {\r\n    type: EventActionEnum.SET_GUESTS;\r\n    payload: IUser[];\r\n}\r\nexport interface SetEventAction {\r\n    type: EventActionEnum.SET_EVENT;\r\n    payload: IEvent[];\r\n}\r\n\r\nexport type EventAction = SetGuestsAction | SetEventAction;\r\n","import { IEvent } from '../../../models/IEvent';\r\nimport { IUser } from '../../../models/IUser';\r\nimport {\r\n    EventAction,\r\n    EventActionEnum,\r\n    EventStateType,\r\n    SetGuestsAction,\r\n    SetEventAction,\r\n} from './types';\r\n\r\nconst initialState: EventStateType = {\r\n    guests: [],\r\n    events: [],\r\n};\r\n\r\nexport const eventReducer = (\r\n    state = initialState,\r\n    action: EventAction\r\n): EventStateType => {\r\n    switch (action.type) {\r\n        case EventActionEnum.SET_GUESTS:\r\n            return { ...state, guests: action.payload };\r\n        case EventActionEnum.SET_EVENT:\r\n            return { ...state, events: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setGuestsAction = (payload: IUser[]): SetGuestsAction => ({\r\n    type: EventActionEnum.SET_GUESTS,\r\n    payload,\r\n});\r\nexport const setEventAction = (payload: IEvent[]): SetEventAction => ({\r\n    type: EventActionEnum.SET_EVENT,\r\n    payload,\r\n});\r\n","import Login from '../containers/Login';\r\nimport Event from '../containers/Event';\r\n\r\nexport interface IRoute {\r\n    path: string;\r\n    element: React.ReactNode;\r\n}\r\n\r\nexport enum RouteNames {\r\n    LOGIN = 'login',\r\n    EVENT = '/',\r\n    ALL = '*',\r\n}\r\n\r\nexport const publicRouter: IRoute[] = [\r\n    {\r\n        path: RouteNames.LOGIN,\r\n        element: <Login />,\r\n    },\r\n    {\r\n        path: RouteNames.ALL,\r\n        element: <Login />,\r\n    },\r\n];\r\n\r\nexport const privateRouter: IRoute[] = [\r\n    {\r\n        path: RouteNames.EVENT,\r\n        element: <Event />,\r\n    },\r\n    {\r\n        path: RouteNames.ALL,\r\n        element: <Event />,\r\n    },\r\n];\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from './reducers/authReducer';\r\nimport { eventReducer } from './reducers/eventReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    event: eventReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type rootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { rootState } from '../store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<rootState> = useSelector;\r\n","import moment, { Moment } from \"moment\";\r\n\r\nexport const rules = {\r\n    required: (message: string = 'Обязательное поле') => ({\r\n        required: true,\r\n        message,\r\n    }),\r\n    isDateAfter: (message: string) => () => ({\r\n        validator(_: any, value: Moment) {\r\n            if (value.isSameOrAfter(moment())) {\r\n                return Promise.resolve()\r\n            } \r\n            return Promise.reject(new Error(message))\r\n        }\r\n    }) \r\n};\r\n","import axios, { AxiosResponse } from 'axios';\r\nimport { IUser } from '../models/IUser';\r\n\r\nexport class UserService {\r\n    static async getUsers(): Promise<AxiosResponse<IUser[]>> {\r\n        return axios.get<IUser[]>('./users.json');\r\n    }\r\n}\r\n","import {\r\n    setAuthAction,\r\n    setErrorAction,\r\n    setIsLoadingAction,\r\n    setUserAction,\r\n} from '.';\r\nimport { AppDispatch } from '../..';\r\nimport { UserService } from '../../../api/userService';\r\nimport { IUser } from '../../../models/IUser';\r\n\r\nexport const asyncActionCreators = {\r\n    login:\r\n        (username: string, password: string) =>\r\n        async (dispatch: AppDispatch) => {\r\n            try {\r\n                dispatch(setIsLoadingAction(true));\r\n                const res = await UserService.getUsers();\r\n                const data = res.data.find(\r\n                    (user) =>\r\n                        user.username === username && user.password === password\r\n                );\r\n                if (data) {\r\n                    localStorage.setItem('auth', 'true');\r\n                    localStorage.setItem('username', data.username);\r\n                    dispatch(setUserAction(data));\r\n                    dispatch(setAuthAction(true));\r\n                } else {\r\n                    dispatch(setErrorAction('Неверный логин или пароль'));\r\n                }\r\n                dispatch(setIsLoadingAction(false));\r\n            } catch (error) {\r\n                dispatch(setErrorAction('Произошла ошибка'));\r\n            }\r\n        },\r\n    logout: () => async (dispatch: AppDispatch) => {\r\n        localStorage.removeItem('auth');\r\n        localStorage.removeItem('username');\r\n        dispatch(setUserAction({} as IUser));\r\n        dispatch(setAuthAction(false));\r\n    },\r\n};\r\n","import { FC } from 'react';\r\nimport { useState } from 'react';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Card, Form, Input } from 'antd';\r\nimport { rules } from '../../utils/rules';\r\nimport { asyncActionCreators } from '../../store/reducers/authReducer/asyncActionCreators';\r\n\r\nimport styles from './LoginForm.module.css';\r\n\r\nconst LoginForm: FC = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n    const { isLoading, error } = useTypedSelector((state) => state.auth);\r\n    const onFinish = () => {\r\n        dispatch(asyncActionCreators.login(username, password));\r\n    };\r\n    return (\r\n        <Form\r\n            labelCol={{ span: 12 }}\r\n            wrapperCol={{ span: 16 }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Card>\r\n                {error && <div className={styles.error}>{error}</div>}\r\n                <Form.Item\r\n                    label='Имя пользователя'\r\n                    name='username'\r\n                    rules={[rules.required('Пожалуйста, введите имя!')]}\r\n                >\r\n                    <Input\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label='Пароль'\r\n                    name='password'\r\n                    rules={[rules.required('Пожалуйста, введите пароль!')]}\r\n                >\r\n                    <Input.Password\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button\r\n                        type='primary'\r\n                        htmlType='submit'\r\n                        loading={isLoading}\r\n                    >\r\n                        Вход\r\n                    </Button>\r\n                </Form.Item>\r\n            </Card>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { FC } from 'react';\r\nimport { Layout, Row } from 'antd';\r\nimport styles from './Login.module.css';\r\nimport LoginForm from '../../components/LoginForm';\r\n\r\nconst Login: FC = () => {\r\n    return (\r\n        <Layout>\r\n            <Row justify='center' align='middle' className={styles.row}>\r\n                <LoginForm />\r\n            </Row>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","export const formatDate = (date: Date): string => {\r\n    const year = date.getFullYear();\r\n    const month =\r\n        date.getMonth() < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\r\n    const day =\r\n        date.getDay() < 10 ? `0${date.getDay() + 1}` : date.getDay() + 1;\r\n    return `${year}.${month}.${day}`;\r\n};\r\n","import { FC } from 'react';\r\nimport { Calendar } from 'antd';\r\nimport { Moment } from 'moment';\r\nimport { IEvent } from '../../models/IEvent';\r\nimport { formatDate } from '../../utils/date';\r\n\r\ninterface EventCalendarProps {\r\n    events: IEvent[];\r\n}\r\n\r\nconst EventCalendar: FC<EventCalendarProps> = ({ events }) => {\r\n    function dateCellRender(value: Moment) {\r\n        const formateDate = formatDate(value.toDate());\r\n\r\n        const currentDateEvents = events.filter(\r\n            (ev) => ev.data === formateDate\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                {currentDateEvents.map((ev, i) => (\r\n                    <div key={i}>{ev.descr}</div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <Calendar dateCellRender={dateCellRender} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EventCalendar;\r\n","import { Button, DatePicker, Form, Input, Row, Select } from 'antd';\r\nimport { Moment } from 'moment';\r\nimport { FC, useState } from 'react';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { IEvent } from '../../models/IEvent';\r\nimport { IUser } from '../../models/IUser';\r\nimport { formatDate } from '../../utils/date';\r\nimport { rules } from '../../utils/rules';\r\n\r\ninterface EventFormProps {\r\n    guests: IUser[];\r\n    submit: (event: IEvent) => void;\r\n}\r\n\r\nconst EventForm: FC<EventFormProps> = ({ guests, submit }) => {\r\n    const [event, setEvent] = useState<IEvent>({\r\n        author: '',\r\n        data: '',\r\n        descr: '',\r\n        guest: '',\r\n    } as IEvent);\r\n\r\n    const { user } = useTypedSelector((state) => state.auth);\r\n\r\n    const selectDate = (date: Moment | null) => {\r\n        if (date) {\r\n            setEvent({ ...event, data: formatDate(date.toDate()) });\r\n        }\r\n    };\r\n\r\n    const submitForm = () => {\r\n        submit({ ...event, author: user.username });\r\n    };\r\n\r\n    return (\r\n        <Form onFinish={submitForm}>\r\n            <Form.Item\r\n                label='Описание события'\r\n                name='desc'\r\n                rules={[rules.required()]}\r\n            >\r\n                <Input\r\n                    onChange={(e) =>\r\n                        setEvent({ ...event, descr: e.target.value })\r\n                    }\r\n                    value={event.descr}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label='Выбрать дату'\r\n                name='date'\r\n                rules={[\r\n                    rules.required(),\r\n                    rules.isDateAfter('Нельзя создать событие на эту дату'),\r\n                ]}\r\n            >\r\n                <DatePicker onChange={(date) => selectDate(date)} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label='Выбрать гостя'\r\n                name='guest'\r\n                rules={[rules.required()]}\r\n            >\r\n                <Select\r\n                    style={{ width: 120 }}\r\n                    onChange={(guest: string) => setEvent({ ...event, guest })}\r\n                >\r\n                    {guests.map((guest) => (\r\n                        <Select.Option\r\n                            key={guest.password}\r\n                            value={guest.username}\r\n                        >\r\n                            {guest.username}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>\r\n            </Form.Item>\r\n\r\n            <Row justify='end'>\r\n                <Form.Item>\r\n                    <Button type='primary' htmlType='submit'>\r\n                        Добавить\r\n                    </Button>\r\n                </Form.Item>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default EventForm;\r\n","import { Button, Layout, Modal, Row } from 'antd';\r\nimport { FC, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport EventCalendar from '../../components/EventCalendar';\r\nimport EventForm from '../../components/EventForm';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { IEvent } from '../../models/IEvent';\r\nimport {\r\n    getGuests,\r\n    createEvent,\r\n    fetchEvents,\r\n} from '../../store/reducers/eventReducer/asyncActionCreators';\r\nimport styles from './Event.module.css';\r\n\r\nconst Event: FC = () => {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { guests, events } = useTypedSelector((state) => state.event);\r\n    const { user } = useTypedSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(getGuests());\r\n        dispatch(fetchEvents(user.username));\r\n    }, []);\r\n\r\n    const addNewEvent = (event: IEvent) => {\r\n        setModalVisible(false);\r\n        dispatch(createEvent(event));\r\n    };\r\n\r\n    return (\r\n        <Layout className={styles.modal}>\r\n            <EventCalendar events={events} />\r\n            <Row justify='center'>\r\n                <Button\r\n                    className={styles.btn}\r\n                    onClick={() => setModalVisible(true)}\r\n                >\r\n                    Добавить событие\r\n                </Button>\r\n            </Row>\r\n            <Modal\r\n                title='Добавить событие'\r\n                visible={modalVisible}\r\n                footer={null}\r\n                onCancel={() => setModalVisible(false)}\r\n            >\r\n                <EventForm guests={guests} submit={addNewEvent} />\r\n            </Modal>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Event;\r\n","import { setGuestsAction, setEventAction } from '.';\r\nimport { AppDispatch } from '../..';\r\nimport { UserService } from '../../../api/userService';\r\nimport { IEvent } from '../../../models/IEvent';\r\n\r\nexport const getGuests = () => async (dispatch: AppDispatch) => {\r\n    try {\r\n        const res = await UserService.getUsers();\r\n        dispatch(setGuestsAction(res.data));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const createEvent = (event: IEvent) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        const events = localStorage.getItem('events') || '[]';\r\n        const json = JSON.parse(events) as IEvent[];\r\n        json.push(event);\r\n        dispatch(setEventAction(json));\r\n        localStorage.setItem('events', JSON.stringify(json));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchEvents =\r\n    (username: string) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            const events = localStorage.getItem('events') || '[]';\r\n            const json = JSON.parse(events) as IEvent[];\r\n            const currentUserEvent = json.filter(\r\n                (event) => event.author === username || event.guest === username\r\n            );\r\n            dispatch(setEventAction(currentUserEvent));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n","import { FC } from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { privateRouter, publicRouter } from '../../router';\r\n\r\nconst AppRouter: FC = () => {\r\n    const { isAuth } = useTypedSelector((state) => state.auth);\r\n    return (\r\n        <>\r\n            {isAuth ? (\r\n                <Routes>\r\n                    {privateRouter.map((route) => (\r\n                        <Route\r\n                            key={route.path}\r\n                            path={route.path}\r\n                            element={route.element}\r\n                        />\r\n                    ))}\r\n                </Routes>\r\n            ) : (\r\n                <Routes>\r\n                    {publicRouter.map((route) => (\r\n                        <Route\r\n                            key={route.path}\r\n                            path={route.path}\r\n                            element={route.element}\r\n                        />\r\n                    ))}\r\n                </Routes>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { FC } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Layout, Menu, Row } from 'antd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { RouteNames } from '../../router';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { asyncActionCreators } from '../../store/reducers/authReducer/asyncActionCreators';\r\nimport styles from './Navigation.module.css';\r\n\r\nconst Navigation: FC = () => {\r\n    const router = useNavigate();\r\n    const { isAuth, user } = useTypedSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Layout.Header>\r\n            <Row justify='end' gutter={6}>\r\n                {isAuth ? (\r\n                    <>\r\n                        <div className={styles.name}>{user.username}</div>\r\n                        <Menu theme='dark' mode='horizontal' selectable={false}>\r\n                            <Menu.Item\r\n                                key='1'\r\n                                onClick={() =>\r\n                                    dispatch(asyncActionCreators.logout())\r\n                                }\r\n                            >\r\n                                Выйти\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </>\r\n                ) : (\r\n                    <Menu theme='dark' mode='horizontal' selectable={false}>\r\n                        <Menu.Item\r\n                            key='1'\r\n                            onClick={() => router(RouteNames.LOGIN)}\r\n                        >\r\n                            Логин\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                )}\r\n            </Row>\r\n        </Layout.Header>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import { FC, useEffect } from 'react';\nimport { Layout } from 'antd';\nimport { useDispatch } from 'react-redux';\n\nimport { setAuthAction, setUserAction } from './store/reducers/authReducer';\nimport { IUser } from './models/IUser';\n\nimport AppRouter from './components/AppRouter';\nimport Navigation from './components/Navigation';\n\nimport './App.css';\n\nconst App: FC = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (localStorage.getItem('auth')) {\n            dispatch(\n                setUserAction({\n                    username: localStorage.getItem('username' || ''),\n                } as IUser)\n            );\n            dispatch(setAuthAction(true));\n        }\n    }, []);\n\n    return (\n        <Layout>\n            <Navigation />\n            <Layout.Content>\n                <AppRouter />\n            </Layout.Content>\n        </Layout>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './store';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}